Left off:
Start of "Joining Lines"
https://tutsplus.com/course/improve-workflow-in-sublime-text-2/

# ##################
# Unique hotkeys
# ##################

# Toggle console
	CTRL-`

# Toggle comments
	CMD-/
	Will comment based on whatever syntax you have set

# Multiple Cursors
	Select string OR cursor in word, then
		CMD-d
			Next occurence
		CTRL-CMD-g
			Every occurence
	Column select
		OPT-"select with mouse"
	Change a bunch of same lines
		"select", then
		CMD-SHIFT-l

# Incremental find
	CMD-I
	(then enter)
	(arrows for previous finds)

# Command pallette
	CMD-SHIFT-P
		Very awesome fuzzy search for all menu items!

# Go to anything (files, paths, etc.)
	CMD-P
		Awesome fuzzy search for files in current project
		You can use file names, parts of the path, whatever

# Toggle sidebar
	CMD-K-B

# Symbol search
	CMD-R
		OR
	CMD-P, then @
	Fuzzy search through methods, classes, etc.
		Can also combine sneakily with CMD-P
			i.e. CMD-P, type "styles"
			Get a bunch of hits for styles, but the top is styles.css
			Then type @body, so in total CMD-P, styles@body
			This will take you right to the CSS for the body in styles.css!

# Package Control
	Command pallete (CMD-SHIFT-P)
	Then type "package control" for a full set of options, or "install" to just search through package you can install
	Then search for what you're looking for

# Snippets
	Command pallete (CMD-SHIFT-P)
	Then type "snippet"
	Set syntax (with command pallette) to diff. syntax to access diff snippets
	Also, snippets will be available for auto-complete based on your snytax
		i.e. in JavaScript, if for if statement, ife for if/else, for for for, etc.
		Enter to accept, tab to next section

# New snippets
	Tools -> New snippet
		Brings up some XML where you can code your own snippet
		Save with the extension .sublime-snippet in the user folder
			The file name is also important
			Good to organize them by syntax too, i.e. put them in a JavaScript folder for JavaScript snippets, then they'll only show up with JavaScript syntax
		The commented out bits can be uncommented for useful stuff
			For example, if you put hello in tabTrigger, and put that in a JavaScript folder, when your syntax is set to JavaScript and you type hello, this snippet will pop up
			The text in the content tag will be displayed
				The ${1:default_text} bits are the tab stop points (where does hitting tab take you to)
			Real world example: self invoking anonymous JS function
<snippet>
	<content><![CDATA[
		(function() {
			${1}
		})();
		]]>
	</content>
	<tabTrigger>siaf</tabTrigger>
</snippet>

# Snippet packets
	CMD-SHIFT-P, then Install Package

# SublimeREPL
	Starting the REPL
		CMD-SHIFT-P				# Then choose REPL appropriate to file type
		Then change the layout
			CMD-OPT-[number]					# That many columns
			CMD-OPT-SHIFT-[number]		# That many rows
		CTRL-SHIFT-2			# move file to group 2 (Menu -> View -> Move File to Group -> Group 2)
	Evaluate in REPL:
		CTRL-, (relase) s		Selection
		CTRL-, (relase) f		File
		CTRL-, (relase) l		Lines
		CTRL-, (relase) b		Block
	Transfer in REPL (just copy, don't eval)
		As above, plus shift
			i.e. CTRL-shift-, (relase) s		Selection

# Prefixr
	CTRL-CMD-X
	Makes your standard CSS cross-browser
	Either have your cursor in the line, select the entire {}, or select the entire CSS doc

# Fetch
	CMD-SHIFT-P
	"Fetch: Manage Remote files"
	You'll see it's separated into two JS objects
		This is how you can set up what to fetch
		In here you can add whatever files you want to fetch regularly
	Then in the future you make a jquery.js empty file, CMD-SHIFT-P, fetch single file, then save and you've got your file!
	Used to pull in single files or zip files into your project
		i.e. pull in the latest version of jQuery

# Fast file creation (AdvancedNewFile)
	CMD-OPT-N
		Creates new file
	Note, you can create directories too , not just files!
	To check out the README
		Sublime Text 2 > Preferences > Browse Packages ...
		Then open the README (drag into Sublime)

# Sidebar Enhancements plugin
	Sublime Text 2 > Preferences > Browse Packages
		Check out README, OSX Default Keymappings
	Useful:
		CMD-SHIFT-P (command pallette)
			Open in browser
			OR the server option
# Sublime projects
	CMD-SHIFT-P > Project > Save As
	Then
	CMD-SHIFT-P > Project > Edit Project
	Then
	Can edit the project, i.e. adding a localhost:
		Add this text:
			"url": "http://localhost:8888/"
	Really useful in conjunction with Sidebar Enhancements

# SublimeLinter
	When you save a file, it will show you all the syntax errors

# Gist
	Basically GitHub for small bits of code, like snippets
	Sublime Text 2 > Preferences > Browse Packages
		Open Gist.sublime-settings
		Add login info
	Create new Gist:
		CMD-SHIFT-P > Gist > Create Public Gist
			In the description, you should add the language it refers to
				For exmaple:
					HTML: Starting Template
					JavaScript: on click
			Don't really need a filename
	Then you can easily open and edit files using the command pallette, and the naming convention allows you to easily filter by language
	Forking Gists:
		Just use the Gist website, fork, and rename the Description to fit with your naming convention
		Then you can easily use the Gist!

# DocBlockr
	/** > Enter
	Will automatically generate really appropriate blocks of code
	Tab through for options

# Task Management
	See here if I want to use:
		https://tutsplus.com/lesson/pretty-task-management/

# LiveReload
	See here if I want to use:
		https://tutsplus.com/lesson/livereload/

# HTTP Requester
	For testing
	Use within Sublime by typing the URL, selecting it, then hitting CDM-CTRL-R

# Changing cases
	CMD-SHIFT-P > Case

# Regular Expressions
	CMD-I > Search term (should be a reg ex)
	CMD-OPT-R (turns on regular expression)
	OPT-ENTER (selects all of the occurences)
		For example:
			<h2>.+</h2>
				Will select everything enclosed in h2 tags, encluding the h2, and will give you multiple cursors
			(?<=<h2>).+(?=</h2>)
				As above, but will not select the <h2>s, only the text between
			. represents any character
			+ represents one or more of the next characters
		Really, anywhere you can do search and replace you can use regular expressions

# Vintage Mode
	To enable:
		Just remove "Vintage" from ignored packages in Preferences
			So we want:
				"ignored_packages":[]
	See here for more:
		https://tutsplus.com/lesson/vintage-mode/

# Quick references
	Navigate to file in ST2
	CMD-SHIFT-P > Copy
	Then chose from:
		"Copy Path from Project"
		"Copy as a/style/script/etc."
	Then insert wherever necessary in HTML

# ##################
# Standard hotkeys
# ##################

# Undo
	CMD-u

# Save
	CMD-s

# Save all
	CMD-OPT-s

# Find
	CMD-f

# Find and replace
	CMD-OPT-f

# New file
	CMD-N

# ##################
# Other notes
# ##################

Packages are stored in:
	~/Library/Application\ Support/Sublime\ Text\ 2/Packages
	To install unofficial packages from GitHub, just git clone them here, for Example:
		cd ~/Library/Application\ Support/Sublime\ Text\ 2/Packages
		git clone https://github.com/lunixbochs/SublimeXiki.git SublimeXiki
	Note that I also named this 

Packages to learn how to use:
	SublimeXiki
	SublimeREPL
		How to extend Python?
			Modules I want are here:
				/usr/local/lib/python2.7/site-packages